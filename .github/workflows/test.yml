name: Test images

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  base:
    strategy:
      fail-fast: true
      matrix:
        platform: ["amd64", "arm64"]
        type: ["gnu", "musl"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Docker Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Vars
        run: |
          echo "BUILD_DATE=$(date --utc)" >> $GITHUB_ENV
      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./base/${{ matrix.type }}.Dockerfile
          pull: true
          tags: base-img-${{ matrix.type }}
          outputs: type=docker,dest=/tmp/base-img-${{ matrix.type }}.tar
          labels: |
            tech.harmless.experimental.name="base-img-${{ matrix.type }}:dev-ga"
            tech.harmless.experimental.pull_request_build="${{ github.event_name == 'pull_request' }}"
            tech.harmless.experimental.run_number="${{ github.run_number }}"
            tech.harmless.experimental.repo="${{ github.repositoryUrl }}"
            tech.harmless.experimental.build_date="${{ env.BUILD_DATE }}"
            tech.harmless.experimental.platform="${{ matrix.platform }}"
            org.opencontainers.image.authors="harmless-tech, crow-rest"
          platforms: linux/${{ matrix.platform }}
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Upload image
        uses: actions/upload-artifact@v3
        with:
          name: base-img-${{ matrix.type }}-${{ matrix.platform }}
          path: /tmp/base-img-${{ matrix.type }}.tar

  cross:
    strategy:
      fail-fast: false
      matrix:
        platform: ["amd64", "arm64"]
        type: ["gnu", "musl"]
        include:
          - target: x86_64-unknown-linux-gnu
            type: gnu
          - target: x86_64-unknown-linux-musl
            type: musl
#          - target: aarch64-unknown-linux-gnu
#          - target: aarch64-unknown-linux-musl
#          - target: x86_64-unknown-freebsd
#          - target: x86_64-unknown-netbsd
#          - target: x86_64-unknown-illumos
#          - target: x86_64-sun-solaris
#          - target: riscv64gc-unknown-linux-gnu
#          - target: powerpc64-unknown-linux-gnu
#          - target: powerpc64le-unknown-linux-gnu
#          - target: s390x-unknown-linux-gnu
#          - target: mips64-unknown-linux-gnuabi64
#          - target: mips64-unknown-linux-muslabi64
#          - target: mips64el-unknown-linux-gnuabi64
#          - target: mips64el-unknown-linux-muslabi64
#          - target: i686-unknown-linux-gnu
#          - target: i686-unknown-linux-musl
#          - target: i686-unknown-freebsd
#          - target: armv7-unknown-linux-gnueabihf
#          - target: armv7-unknown-linux-musleabihf
#          - target: powerpc-unknown-linux-gnu
#          - target: mips-unknown-linux-gnu
#          - target: mips-unknown-linux-musl
#          - target: mipsel-unknown-linux-gnu
#          - target: mipsel-unknown-linux-musl
#          - target: x86_64-pc-windows-gnu
#          - target: i686-pc-windows-gnu
    runs-on: ubuntu-latest
    needs: [base]
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Docker Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Download image
        uses: actions/download-artifact@v3
        with:
          name: base-img-${{ matrix.type }}-${{ matrix.platform }}
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/base-img-${{ matrix.type }}.tar
          docker image ls -a
      - name: Vars
        run: |
          echo "BUILD_DATE=$(date --utc)" >> $GITHUB_ENV
      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./cross/Dockerfile
          pull: true
          tags: cross:${{ matrix.target }}
          outputs: type=docker,dest=/tmp/cross-${{ matrix.target }}.tar
          labels: |
            tech.harmless.experimental.name="cross:${{ matrix.target }}"
            tech.harmless.experimental.pull_request_build="${{ github.event_name == 'pull_request' }}"
            tech.harmless.experimental.run_number="${{ github.run_number }}"
            tech.harmless.experimental.repo="${{ github.repositoryUrl }}"
            tech.harmless.experimental.build_date="${{ env.BUILD_DATE }}"
            tech.harmless.experimental.platform="${{ matrix.platform }}"
            org.opencontainers.image.authors="harmless-tech, crow-rest"
          platforms: linux/${{ matrix.platform }}
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Upload image
        uses: actions/upload-artifact@v3
        with:
          name: cross-${{ matrix.target }}-${{ matrix.platform }}
          path: /tmp/cross-${{ matrix.target }}.tar
